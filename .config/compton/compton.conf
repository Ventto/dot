#################################
# Backend
#################################
backend = "glx";

#################################
# GLX backend
#################################
glx-no-stencil = true;
glx-copy-from-front = false;
glx-swap-method = "undefined";

#################################
# Shadows
#################################
shadow = false;

#################################
# Opacity
#################################
menu-opacity = 1;
inactive-opacity = 1;
active-opacity = 1;
frame-opacity = 1;
inactive-opacity-override = false;
alpha-step = 0.06;
opacity-rule = [ "0:_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'" ];
blur-background = false;

#################################
# Fading
#################################
fading = true;
fade-delta = 4;
fade-in-step = 0.03;
fade-out-step = 0.03;
#no-fading-openclose = true;

#################################
# Window type settings
#################################
wintypes: {
	tooltip = { fade = false; shadow = false; opacity = 1; focus = false; };
};

#################################
# Other
#################################
# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;

# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused
# instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;

# Detect _NET_WM_OPACITY on client windows, prevents opacity being ignored
detect-client-opacity = true;

# If not specified or 0, compton will try detecting this with X RandR extension.
refresh-rate = 0;

# opengl-swc: Try to VSync with SGI_swap_control OpenGL extension (+glx).
vsync = "opengl-swc";
# Enable DBE painting mode (+vsync) to eliminate tearing. Reported ~ no effect
dbe = false;

# Painting on X Composite overlay window. Recommended.
paint-on-overlay = true;

# Limit compton to repaint at most once every 1 / refresh_rate second (perf).
sw-opti = true;

# Unredirect all windows if a full-screen opaque window is detected (perf).
unredir-if-possible = true;

# Use WM_TRANSIENT_FOR to group windows, and consider windows,
# in the same group focused at the same time.
detect-transient = true;
# Use WM_CLIENT_LEADER to group windows, and consider windows,
# in the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;
